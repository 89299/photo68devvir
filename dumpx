#!/usr/bin/python
# -*- coding: utf-8

try:
    import os, sys, time, datetime, random, hashlib, re, threading, json, getpass, urllib, cookielib, requests, uuid, string
    from multiprocessing.pool import ThreadPool
except ImportError:
    os.system('pip2 install requests')
    os.system('python2 dump.py')

from requests.exceptions import ConnectionError
bd = random.randint(20000000.0, 30000000.0)
sim = random.randint(20000.0, 40000.0)
header = {'x-fb-connection-bandwidth': repr(bd), 'x-fb-sim-hni': repr(sim), 'x-fb-net-hni': repr(sim), 'x-fb-connection-quality': 'EXCELLENT', 'x-fb-connection-type': 'cell.CTRadioAccessTechnologyHSDPA', 'user-agent': 'Dalvik/1.6.0 (Linux; U; Android 4.4.2; NX55 Build/KOT5506) [FBAN/FB4A;FBAV/106.0.0.26.68;FBBV/45904160;FBDM/{density=3.0,width=1080,height=1920};FBLC/it_IT;FBRV/45904160;FBCR/PosteMobile;FBMF/asus;FBBD/asus;FBPN/com.facebook.katana;FBDV/ASUS_Z00AD;FBSV/5.0;FBOP/1;FBCA/x86:armeabi-v7a;]', 'content-type': 'application/x-www-form-urlencoded', 'x-fb-http-engine': 'Liger'}
reload(sys)
sys.setdefaultencoding('utf8')
#os.system("rm -rf /sdcard/userids.txt")
def azim():
	os.system('echo  "\n=============================================\n" | lolcat ')
def logo():
	os.system('echo  "\n  ▓█████▄  █    ██  ███▄ ▄███▓ ██▓███  \n  ▒██▀ ██▌ ██  ▓██▒▓██▒▀█▀ ██▒▓██░  ██▒\n  ░██   █▌▓██  ▒██░▓██    ▓██░▓██░ ██▓▒\n  ░▓█▄   ▌▓▓█  ░██░▒██    ▒██ ▒██▄█▓▒ ▒\n  ░▒████▓ ▒▒█████▓ ▒██▒   ░██▒▒██▒ ░  ░\n   ▒▒▓  ▒ ░▒▓▒ ▒ ▒ ░ ▒░   ░  ░▒▓▒░ ░  ░\n   ░ ▒  ▒ ░░▒░ ░ ░ ░  ░      ░░▒ ░     \n   ░ ░  ░  ░░░ ░ ░ ░      ░   ░░       \n     ░       ░            ░            \n   ░                                   \n╔═════════════════════════════════════════╗\n║        Author   : M4 3Rr4               ║\n║        Github   : Unknown               ║\n║        Fb       : Anonymous             ║\n╚═════════════════════════════════════════╝" | lolcat ')	
  

def menu():
    os.system('clear')
    try:
        token = open('access_token.txt', 'r').read()
    except (KeyError, IOError):
        login()

    try:
        r = requests.get('https://graph.facebook.com/me?access_token=' + token, headers=header)
        q = json.loads(r.text)
        name = q['name']
    except KeyError:
        logo()
        print ''
        print '\t\x1b[1;91m LOGGED IN TOKEN HAS EXPIRED'
        print ''
        time.sleep(1)
        os.system('rm -rf access_token.txt')
        login()

      
def login():
    os.system('clear')
    try:
        token = open('access_token.txt', 'r').read()
        ex_id()
    except (KeyError, IOError):
        logo()
        print ''
        print '\t\x1b[1;92m    LOGIN WITH ACCESS TOKEN'
        print ''
        token = raw_input('\x1b[1;93m PASTE TOKEN HEAR : \x1b[1;92m')
        sav = open('access_token.txt', 'w')
        sav.write(token)
        sav.close()
        ex_id()

def ex_id():
    global token
    idg = []
    try:
        token = open('access_token.txt', 'r').read()
    except IOError:
        print '\t\x1b[1;91mToken not found'
        print ''
        time.sleep(1)
        login()

    os.system('clear')
    logo()
    print ''
    print '\t\x1b[1;92mCOLLECT PUBLIC ID FRIENDLIST'
    print ''
    idh = raw_input('\x1b[1;93m INPUT ID: ')
    try:
        r = requests.get('https://graph.facebook.com/' + idh + '?access_token=' + token, headers=header)
        q = json.loads(r.text)
        print ' COLLECTIN FROM: ' + q['name']
    except KeyError:
        print ''
        print '\tInvalid id provided'
        print ''
        raw_input(' PRESS ENTER TO BACK')
        ex_id()

    r = requests.get('https://graph.facebook.com/' + idh + '/friends?access_token=' + token, headers=header)
    q = json.loads(r.text)
    ids = open('ids_friends.txt', 'w')
    for i in q['data']:
        uid = i['id']
        na = i['name']
        nm = na.rsplit(' ')[0]
        idg.append(uid + '|' + nm)
        ids.write(uid + '|' + nm + '\n')

    ids.close()
    print ''
    azim()
    print ''
    print '\x1b[1;92m THE PROCESS HAS COMPLETED'
#    print '\x1b[1;93m Total ids: \x1b[1;92m' + str(len(idg))
    print ''
    azim()
    print ''
    raw_input('\x1b[1;95m Press enter to download file')
    os.system('cat ids_friends.txt | grep "100069" >> /sdcard/userids.txt')
    os.system('cat ids_friends.txt | grep "100070" >> /sdcard/userids.txt') 
    os.system('rm -rf ids_friends.txt')
    print '\x1b[1;93m File downloaded successfully'
    print '\x1b[1;92m Saved /sdcard/userids.txt'
    print ''
    time.sleep(0.1)
    ex_id()


if __name__ == '__main__':
	menu()
	ex_id()

